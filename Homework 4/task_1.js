/*1. Написать функцию, преобразующую число в объект. Передавая на вход число от 0 до 999, мы должны получить на выходе объект, в котором в соответствующих свойствах описаны единицы, десятки и сотни. Например, для числа 245 мы должны получить следующий объект: {‘единицы’: 5, ‘десятки’: 4, ‘сотни’: 2}. Если число превышает 999, необходимо выдать соответствующее сообщение с помощью console.log и вернуть пустой объект.*/

obj = {
    'единицы': 0,
    'десятки': 0,
    'сотни': 0
}

function ordering(num) {
    if (num >= 0 && num <= 999) {
        obj['сотни'] = (Math.floor(num / 100))
        obj['десятки'] = (Math.floor(num % 100 / 10))
        obj['единицы'] = (Math.floor(num % 100 % 10))
        return console.log(obj)
    }
    else {
        for (var elements in obj) {
            delete obj[elements]
        }
        console.log(obj)
        return console.log(`Элемент находится вне диапазоне от 0 до 999, объект равен ${obj}`)
        /*Вот здесь в выводе не пойму, почему вместо {} выводится [object Object], хотя выше выводится все нормально. Буду благодарен за подсказку*/

    }
}

/*
function ordering(num) {
    if (typeof Number(num)) {
        let str = String(num)
        if (str.length <= 3) {
            obj['сотни'] = Number(str[0])
            obj['десятки'] = Number(str[1])
            obj['единицы'] = Number(str[2])
            return console.log(obj)
        }
        else {
            for (var elements in obj) {
                delete obj[elements]
            }
            console.log(obj)
            return console.log(`Элемент находится вне диапазоне от 0 до 999, объект равен ${obj}`)
            Если вводить значение от 0 до 99, то в объекте в 'сотни' будет выводиться NaN, это можно обойти с помощью дополнительных проверок, но я решил не заморачиваться))
        }
    }
}
*/

ordering(1000)